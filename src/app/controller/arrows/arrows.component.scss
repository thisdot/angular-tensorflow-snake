@import 'variables';
@import 'functions';
@import 'mixins';
@import 'breakpoints';

@mixin arrowBoxShadow($direction) {
  @if $direction == up {
    box-shadow: rgba(50, 50, 93, 0.15) 0px -6px 12px -2px,
      rgba(0, 0, 0, 0.3) 0px -3px 7px -3px;
  } @else if $direction == down {
    box-shadow: rgba(50, 50, 93, 0.15) 0px 6px 12px -2px,
      rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
  } @else if $direction == left {
    box-shadow: rgba(50, 50, 93, 0.15) -6px 0px 12px -2px,
      rgba(0, 0, 0, 0.3) -3px 0px 7px -3px;
  } @else if $direction == right {
    box-shadow: rgba(50, 50, 93, 0.15) 6px 0px 12px -2px,
      rgba(0, 0, 0, 0.3) 3px 0px 7px -3px;
  } @else {
    @error "Invalid direction for boxShadow mixin: #{$direction}. Use 'up', 'down', 'left', or 'right'.";
  }
}

$border-raised: 0.4vw solid $red--250;
$border-raised--l: 0.6vw solid $red--250;

:host {
  display: block;
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}

.arrow-buttons {
  position: absolute;
  top: 50%;
  left: 6%;
  z-index: 2;
  max-height: 80%;
  max-width: 25%;
  aspect-ratio: 1/1;
  transform: translateY(-50%);
  position: relative;
  &__button {
    width: 33.333%;
    height: 33.333%;
    background: $red--150;
    position: absolute;
    box-sizing: border-box;
    transition: box-shadow 0.5s ease-out, border 0.5s ease-out;
    box-sizing: border-box;
    border: 0px solid transparent;
    background-size: 30%;
    &--top {
      @include triangle(up);
      top: 1px;
      left: 33.333%;
      border-top-right-radius: 15%;
      border-top-left-radius: 15%;
    }
    &--bottom {
      @include triangle(down);
      bottom: 1px;
      left: 33.333%;
      border-bottom-left-radius: 15%;
      border-bottom-right-radius: 15%;
    }
    &--left {
      @include triangle(left);
      top: 33.333%;
      left: 0;
      border-bottom-left-radius: 15%;
      border-top-left-radius: 15%;
    }
    &--right {
      @include triangle(right);
      top: 33.333%;
      right: 1px;
      border-bottom-right-radius: 15%;
      border-top-right-radius: 15%;
    }

    &--center {
      top: 33.333%;
      left: 33.333%;
    }
  }
}

:host {
  &.direction--down {
    .arrow-buttons__button {
      &--bottom {
        border-bottom: 1px solid $red--250;
        border-right: 1px solid $red--250;
        border-left: 1px solid $red--250;
        @include triangle(down, $orange);
      }
      &--top {
        border-top: $border-raised;
        border-left: 1px solid $red--250;
        @include arrowBoxShadow(up);
      }
      &--left {
        border-left: 1px solid $red--250;
        border-top: $border-raised;
      }
      &--right {
        border-right: 1px solid $red--250;
        border-top: $border-raised;
      }
    }
  }
  &.direction--up {
    .arrow-buttons__button {
      &--bottom {
        border-bottom: $border-raised--l;
        border-right: 1px solid $red--250;
        border-left: 1px solid $red--250;
        @include arrowBoxShadow(down);
      }
      &--top {
        border-top: 1px solid $red--250;
        border-left: 1px solid $red--250;
        @include triangle(up, $orange);
      }
      &--left {
        border-left: 1px solid $red--250;
        border-bottom: $border-raised;
      }
      &--right {
        border-right: 1px solid $red--250;
        border-bottom: $border-raised;
      }
    }
  }
  &.direction--right {
    .arrow-buttons__button {
      &--bottom {
        border-bottom: 1px solid $red--250;
        border-right: 1px solid $red--250;
        border-left: $border-raised;
      }
      &--top {
        border-top: $border-raised;
        border-left: $border-raised;
      }
      &--left {
        border-left: $border-raised;
        border-bottom: 1px solid $red--250;
        @include arrowBoxShadow(left);
      }
      &--right {
        border-right: 1px solid $red--250;
        border-bottom: 1px solid $red--250;
        @include triangle(right, $orange);
      }
    }
  }
  &.direction--left {
    .arrow-buttons__button {
      &--bottom {
        border-bottom: 1px solid $red--250;
        border-right: $border-raised;
        border-left: 1px solid $red--250;
      }
      &--top {
        border-top: $border-raised;
        border-left: 1px solid $red--250;
        border-right: $border-raised;
      }
      &--left {
        border-left: 1px solid $red--250;
        border-bottom: 2px solid $red--250;
        @include triangle(left, $orange);
      }
      &--right {
        border-right: $border-raised;
        border-bottom: 1px solid $red--250;
        @include arrowBoxShadow(right);
      }
    }
  }
}

@include media($phone) {
  $border-raised: 0.8vw solid $red--250;
  $border-raised--l: 1.2vw solid $red--250;
  :host {
    &.direction--down {
      .arrow-buttons__button {
        &--top {
          border-top: $border-raised;
        }
        &--left {
          border-top: $border-raised;
        }
        &--right {
          border-top: $border-raised;
        }
      }
    }
    &.direction--up {
      .arrow-buttons__button {
        &--bottom {
          border-bottom: $border-raised--l;
        }
        &--left {
          border-bottom: $border-raised;
        }
        &--right {
          border-bottom: $border-raised;
        }
      }
    }
    &.direction--right {
      .arrow-buttons__button {
        &--bottom {
          border-left: $border-raised;
        }
        &--top {
          border-top: $border-raised;
          border-left: $border-raised;
        }
        &--left {
          border-left: $border-raised;
        }
      }
    }
    &.direction--left {
      .arrow-buttons__button {
        &--bottom {
          border-right: $border-raised;
        }
        &--top {
          border-top: $border-raised;
          border-right: $border-raised;
        }
        &--right {
          border-right: $border-raised;
        }
      }
    }
  }
}
